;;; input/keyboard/layout/spydez/init.el -*- lexical-binding: t; -*-


;;                                  ──────────                                ;;
;; ╔════════════════════════════════════════════════════════════════════════╗ ;;
;; ║                        :spydez Layout Keybinds                         ║ ;;
;; ╚════════════════════════════════════════════════════════════════════════╝ ;;
;;                                  ──────────                                ;;

(setq input//kl:layout/active :spydez)


;;------------------------------------------------------------------------------
;; Common
;;------------------------------------------------------------------------------

;; None right now.


;;------------------------------------------------------------------------------
;; Evil
;;------------------------------------------------------------------------------

;; Set our evil keybinds. Does not configure the keybinds; just saves it for now.
(input:keyboard/layout:set :evil
  ;; Keybinds for the `:spydez' layout: a big list of inputs to
  ;; `input:keyboard/layout:map!'.
  '(;; ╔════════════════════════════════════════════════════════════════╗
    ;; ║ Keymap: nil/global                                             ║
    ;; ╚════════════════════════════════════════════════════════════════╝

    ;; ┌────────────────────────────────┐
    ;; │ Movement                       │
    ;; └────────────────────────────────┘

    :nvm  "c"  :layout:evil:line-prev
    :nvm  "t"  :layout:evil:line-next
    :nvm  "h"  :layout:evil:char-next
    :nvm  "n"  :layout:evil:char-prev

    ;; TODO: Many more keybinds for global?
    ;; TODO: Many more keymaps
    ))


;;------------------------------------------------------------------------------
;; Emacs
;;------------------------------------------------------------------------------

;; None right now.


;;------------------------------------------------------------------------------
;; The End.
;;------------------------------------------------------------------------------




;; ;;------------------------------------------------------------------------------
;; ;; Constants & Variables
;; ;;------------------------------------------------------------------------------

;; (defvar input//kl:spydez:keys
;;   '(;;-------------------------------------------------------------------------
;;     ;; Global Keymap
;;     ;;-------------------------------------------------------------------------
;;     (nil . (;;------------------------------
;;             ;; Movement
;;             ;;------------------------------
;;             (:up    . "c")
;;             (:down  . "t")
;;             (:left  . "h")
;;             (:right . "n")

;;             ;; TODO: switch to these
;;             ;; (:up    . ".")
;;             ;; (:down  . "e")
;;             ;; (:left  . "o")
;;             ;; (:right . "u")
;;             )))
;;   "Keyword -> kbd string alist for the active/desired keyboard layout.")


;; (defvar input//kl:spydez:functions
;;   '(;;--------------------------------------------------------------------------
;;     ;; Global Keymap
;;     ;;--------------------------------------------------------------------------
;;     (nil .
;;          (;;------------------------------
;;           ;; Movement
;;           ;;------------------------------
;;           (:up    :nvm #'evil-previous-line)
;;           (:down  :nvm #'evil-next-line)
;;           (:left  :nvm #'evil-backward-char)
;;           (:right :nvm #'evil-forward-char))))
;;   "Keymap -> Keyword -> evil-state/function alists for the active/desired keyboard
;; layout.")


;; ;;------------------------------------------------------------------------------
;; ;; Registration
;; ;;------------------------------------------------------------------------------

;; (input//kl:layout/init :spydez
;;                        'input//kl:spydez:keys
;;                        'input//kl:spydez:functions)


;; ;;------------------------------------------------------------------------------
;; ;; The End.
;; ;;------------------------------------------------------------------------------
